{"ast":null,"code":"var _jsxFileName = \"/Users/dana/Downloads/NTU/Ascendo/frontend/src/CameraFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CameraFeed() {\n  _s();\n  const [image, setImage] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://<raspberry_pi_ip>:5000/video_feed'); // Replace with Raspberry Pi IP\n        const blob = await response.blob();\n        const imageUrl = URL.createObjectURL(blob);\n        setImage(imageUrl);\n      } catch (error) {\n        console.error('Error fetching camera feed:', error);\n      }\n    };\n\n    // Fetch every 100ms for near real-time updates\n    const intervalId = setInterval(fetchData, 100);\n    return () => clearInterval(intervalId); // Cleanup on unmount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Robot Camera Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), image ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"Robot Camera Feed\",\n      style: {\n        width: \"80%\",\n        border: \"1px solid black\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading camera feed...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(CameraFeed, \"dGVwJEArO+c3odeDsBUMrBRJ/DQ=\");\n_c = CameraFeed;\nexport default CameraFeed;\nvar _c;\n$RefreshReg$(_c, \"CameraFeed\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CameraFeed","_s","image","setImage","fetchData","response","fetch","blob","imageUrl","URL","createObjectURL","error","console","intervalId","setInterval","clearInterval","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","width","border","_c","$RefreshReg$"],"sources":["/Users/dana/Downloads/NTU/Ascendo/frontend/src/CameraFeed.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction CameraFeed() {\n  const [image, setImage] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://<raspberry_pi_ip>:5000/video_feed'); // Replace with Raspberry Pi IP\n        const blob = await response.blob();\n        const imageUrl = URL.createObjectURL(blob);\n        setImage(imageUrl);\n      } catch (error) {\n        console.error('Error fetching camera feed:', error);\n      }\n    };\n\n    // Fetch every 100ms for near real-time updates\n    const intervalId = setInterval(fetchData, 100);\n\n    return () => clearInterval(intervalId); // Cleanup on unmount\n  }, []);\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h1>Robot Camera Feed</h1>\n      {image ? (\n        <img\n          src={image}\n          alt=\"Robot Camera Feed\"\n          style={{ width: \"80%\", border: \"1px solid black\" }}\n        />\n      ) : (\n        <p>Loading camera feed...</p>\n      )}\n    </div>\n  );\n}\n\nexport default CameraFeed;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,CAAC,CAAC,CAAC;QAC1E,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClC,MAAMC,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACH,IAAI,CAAC;QAC1CJ,QAAQ,CAACK,QAAQ,CAAC;MACpB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;;IAED;IACA,MAAME,UAAU,GAAGC,WAAW,CAACV,SAAS,EAAE,GAAG,CAAC;IAE9C,OAAO,MAAMW,aAAa,CAACF,UAAU,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEd,OAAA;IAAKiB,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAClCnB,OAAA;MAAAmB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBpB,KAAK,gBACJH,OAAA;MACEwB,GAAG,EAAErB,KAAM;MACXsB,GAAG,EAAC,mBAAmB;MACvBR,KAAK,EAAE;QAAES,KAAK,EAAE,KAAK;QAAEC,MAAM,EAAE;MAAkB;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,gBAEFvB,OAAA;MAAAmB,QAAA,EAAG;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC7B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACrB,EAAA,CAnCQD,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AAqCnB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}